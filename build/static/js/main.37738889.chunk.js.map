{"version":3,"sources":["play-button.svg","logo.svg","components/Api.js","actionCreators/actionCreators.js","actionTypes/actionTypes.js","reducers/searchTerm.js","reducers/apiData.js","reducers/trailerApi.js","reducers/index.js","reducers/weekTrending.js","reducers/movieDetails.js","reducers/autoCompletion.js","reducers/favorites.js","store.js","components/MovieList.js","components/Movies.js","components/MovieDetail.js","components/SlideMovies/Movie.js","components/SlideMovies/SlideMovies.js","components/Trending/WeekTrending.js","components/Favorites/Favorites.js","components/MovieDetails/Cast.js","components/MovieDetails/MovieDetails.js","components/FilterMenu/Menu.js","App.js","components/Favorites.js","components/Form/Input.js","observables/observables.js","components/Form/Form.js","components/AutoCompletionForm/AutoCompletion.js","components/Header.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","API","API_KEY","BASE_URL","getData","url","fetch","fetchMovieCast","_fetchMovieCast","Object","asyncToGenerator","regenerator_default","a","mark","_callee","movieId","response","wrap","_context","prev","next","concat","sent","abrupt","json","stop","this","_x","apply","arguments","fetchMovieSearched","_fetchMovieSearched","_callee2","query","_context2","_x2","fetchWeekTrending","_fetchWeekTrending","_callee3","_context3","fetchMovieDetails","_fetchMovieDetails","_callee4","_context4","_x3","fetchTrailer","_fetchTrailer","_callee5","_context5","_x4","setSearchTerm","value","type","payload","hideMovieDetails","autoCompletion","movies","emptyAutoCompletion","term","dispatch","then","res","results","catch","err","console","log","searchTermReducer","state","length","undefined","action","apiDataReducer","map","movie","assign","favorite","trailerApiReducer","rootReducer","combineReducers","searchTerm","data","trailer","weekTrending","movieDetails","on","objectSpread","favorites","toConsumableArray","store","createStore","applyMiddleware","thunk","Movie","props","colorScore","rating","stylesBg","backgroundImage","cover","classNameFavBtn","react_default","createElement","className","style","fa","onClick","addToFavorite","borderColor","showDetails","title","date","overview","slice","Movies","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","_this","i","MovieList_Movie","poster_path","original_title","vote_average","release_date","Component","MovieDetail","movieDetailOn","closeModal","src","allow","webkitallowfullscreen","mozallowfullscreen","allowFullScreen","frameBorder","modestbranding","ListStyled","styled","ul","_templateObject","ElementListStyled","li","_templateObject2","ImageStyled","img","_templateObject3","left","toggleMovieDetails","id","alt","Wrapper","section","SlideMovies_templateObject","Title","h3","SlideMovies_templateObject2","StyledLink","Link","SlideMovies_templateObject3","SlideMovies","_this$props","path","to","Movie_Movie","React","WeekTrending","SlideMovies_SlideMovies","connect","Favorites","CastList","cast","castLength","actor","credit_id","profile_path","name","MovieDetails","castToggled","noScroll","window","scrollTo","calcRuntime","runtime","runtimeInt","parseInt","hour","minutes","prevProps","removeEventListener","addEventListener","poster","styleMovieDetails","playBtn","genres","vote_count","Cast","bindActionCreators","Actions","FilterMenu","menu","App","call","bind","assertThisInitialized","getWeekTrending","index","getTrailer","setState","FilterMenu_Menu","Trending_WeekTrending","components_Favorites_Favorites","Movies_Movies","MovieDetail_MovieDetail","components_MovieDetails_MovieDetails","trailers","_ref","favoritesMovies","filter","InputRef","forwardRef","ref","placeholder","onChange","onChangeHandler","autoCompletion$","element","eventType","fromEvent","pipe","distinctUntilChanged","throttleTime","target","switchMap","from","Form","inputQueryShowed","inpRef","createRef","autoCompletionSubscription","event","subscribe","onChangeQuery","e","toggleInput","submitForm","preventDefault","current","unsubscribe","onSubmit","display","autoCompletionMovies","Header","logo","components_Form_Form","components_AutoCompletionForm_AutoCompletion","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","es","BrowserRouter","basename","Header_Header","Switch","Route","exact","component","document","getElementById","URL","process","origin","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.37738889.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play-button.cfccda6e.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.02a9430b.svg\";","export const API = (() => {\n    const API_KEY = 'cd8616dd1859d5e422a87d51ad82a0b9';\n    const BASE_URL = 'https://api.themoviedb.org/3';\n\n    const getData = url => fetch(url);\n\n    return {\n        fetchMovieCast: async movieId => {\n            const response = await getData(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n\n            return response.json();\n        },\n        fetchMovieSearched: async query => {\n            const response = await getData(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`);\n\n            return response.json();\n        },\n        fetchWeekTrending: async () => {\n            const response = await getData(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`);\n\n            return response.json();\n        },\n        fetchMovieDetails: async movieId => {\n            const response = await getData(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n\n            return response.json();\n        },\n        fetchTrailer: async movieId => {\n            const response = await getData(`${BASE_URL}/movie/${movieId}/videos?api_key=${API_KEY}&language=en-US`);\n\n            return response.json();\n        },\n    }\n\n})();","import * as ActionTypes from '../actionTypes/actionTypes';\nimport {API} from '../components/Api';\n\nexport const setSearchTerm = value => ({\n    type: ActionTypes.SET_SEARCH_TERM,\n    payload: value\n});\n\nexport const getMovieSearched = (data) => ({\n    type: ActionTypes.ADD_API_DATA,\n    payload: data\n});\n\nexport const getTrailer = (trailer) => ({\n    type: ActionTypes.GET_TRAILER,\n    payload: trailer\n});\n\nexport const addToFavorite = movie => ({\n    type: ActionTypes.ADD_TO_FAVORITE,\n    payload: movie\n});\n\nconst getWeekTrending = data => ({\n    type: ActionTypes.GET_WEEK_TRENDING,\n    payload: data\n});\n\nexport const getMovieDetails = movie => ({\n    type: ActionTypes.GET_MOVIE_DETAILS,\n    payload: movie\n});\n\nexport const hideMovieDetails = () => ({\n    type: ActionTypes.HIDE_MOVIE_DETAILS\n});\n\nexport const autoCompletion = movies =>({\n    type: ActionTypes.SET_AUTO_COMPLETION,\n    payload: movies\n});\n\nexport const emptyAutoCompletion = () => ({\n    type: ActionTypes.EMPTY_AUTO_COMPLETION\n});\n\nexport const fetchMovieDetails = movieId => dispatch => {\n    API.fetchMovieDetails(movieId)\n        .then(res => {\n            //fetch the cast\n            API.fetchMovieCast(movieId)\n                .then(({\n                    cast\n                }) => {\n                    dispatch(getMovieDetails(\n                        Object.assign({}, res, {\n                            cast\n                        })\n                    ));\n                })\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nexport const fetchWeekTrending = () => dispatch => {\n    API.fetchWeekTrending()\n        .then(res => {\n            dispatch(getWeekTrending(res.results));\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nexport const fetchMovieSearched = term => dispatch => {\n    API.fetchMovieSearched(term)\n        .then(res => dispatch(getMovieSearched(res.results)))\n        .catch(err => console.log(err));\n};\n\nexport const getTrailerMiddleware = movieId => dispatch => {\n    API.fetchTrailer(movieId)\n        .then(res => {\n            let trailer = res.trailers.results[0].key;\n            dispatch(getTrailer(trailer));\n        }).catch(err => console.log(err))\n}","export const SET_SEARCH_TERM = 'SET_SEARCH_TERM';\nexport const ADD_API_DATA = 'ADD_API_DATA';\nexport const GET_TRAILER = 'GET_TRAILER';\nexport const ADD_TO_FAVORITE = 'ADD_TO_FAVORITE';\nexport const GET_WEEK_TRENDING = 'GET_WEEK_TRENDING';\nexport const GET_MOVIE_DETAILS = 'GET_MOVIE_DATAILS';\nexport const HIDE_MOVIE_DETAILS = 'HIDE_MOVIE_DETAILS';\nexport const SET_AUTO_COMPLETION = 'SET_AUTO_COMPLETION';\nexport const EMPTY_AUTO_COMPLETION = 'EMPTY_AUTO_COMPLETION';","import * as ActionTypes from '../actionTypes/actionTypes';\n\nconst searchTermReducer = (state = '', action) => {\n    switch(action.type) {\n        case ActionTypes.SET_SEARCH_TERM:\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport default searchTermReducer;","import * as ActionTypes from '../actionTypes/actionTypes';\n\nconst apiDataReducer = (state=[], action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_API_DATA:\n            return action.payload.map(movie=>{\n                return Object.assign({}, movie, {favorite: false})\n            });\n        default:\n            return state;\n    }\n};\n\nexport default apiDataReducer;","import * as ActionTypes from '../actionTypes/actionTypes';\n\nconst trailerApiReducer = (state = '', action) => {\n    switch (action.type) {\n        case ActionTypes.GET_TRAILER:\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport default trailerApiReducer;","import {combineReducers} from 'redux';\nimport searchTermReducer from './searchTerm';\nimport apiDataReducer from './apiData';\nimport trailerApiReducer from './trailerApi';\nimport {weekTrendingReducer} from './weekTrending';\nimport {movieDetailsReducer} from './movieDetails';\nimport {autoCompletionReducer} from './autoCompletion';\nimport {favoritesReducer} from './favorites';\n\nconst rootReducer = combineReducers({\n    searchTerm: searchTermReducer,\n    data: apiDataReducer,\n    trailer: trailerApiReducer,\n    weekTrending: weekTrendingReducer,\n    movieDetails: movieDetailsReducer,\n    autoCompletion: autoCompletionReducer,\n    favorites: favoritesReducer,\n});\n\nexport default rootReducer;","import * as ActionTypes from '../actionTypes/actionTypes';\n\nexport const weekTrendingReducer = (state = [], action) => {\n  switch (action.type) {\n    case ActionTypes.GET_WEEK_TRENDING:\n      return action.payload;\n    default:\n      return state;\n  }\n};","import * as ActionTypes from '../actionTypes/actionTypes';\n\nexport const movieDetailsReducer = (state = {\n  on: false\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.GET_MOVIE_DETAILS:\n      return Object.assign({}, {\n        on: true\n      }, {...action.payload});\n    case ActionTypes.HIDE_MOVIE_DETAILS:\n      return Object.assign({}, {\n        on: false\n      })\n    default:\n      return state;\n  }\n};","import * as ActionTypes from '../actionTypes/actionTypes';\n\nexport const autoCompletionReducer = (state = [], action) => {\n  switch (action.type) {\n    case ActionTypes.SET_AUTO_COMPLETION:\n      return action.payload;\n    case ActionTypes.EMPTY_AUTO_COMPLETION:\n      return [];\n    default:\n      return state;\n  }\n}","import * as ActionTypes from '../actionTypes/actionTypes';\n\nexport const favoritesReducer = (state=[], action) =>{\n  switch(action.type) {\n    case ActionTypes.ADD_TO_FAVORITE:\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n};","import {createStore, applyMiddleware} from 'redux';\nimport thunk from  'redux-thunk';\nimport rootReducer from './reducers/index';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;","import React from 'react';\nimport { FaStar } from 'react-icons/fa';\n\nexport const Movie = props => {\n  let colorScore =\n    props.rating * 10 >= 75 ? 'rgb(61, 199, 61)' : props.rating * 10 >= 50 ? 'rgb(236, 132, 13)' : 'rgb(243, 30, 58)';\n\n  let bgImage = `https://image.tmdb.org/t/p/w500${props.cover}`;\n  let stylesBg = {\n    backgroundImage: 'linear-gradient(180deg, rgba(2,2,2,0.55) 65%, rgba(255,255,255,0.45)), url(' + bgImage + ')'\n  };\n\n  let classNameFavBtn = props.favorite ? 'favorite favorite-true' : 'favorite';\n\n  return (\n    <li className=\"movie\">\n      <div className=\"img\" style={stylesBg} />\n      <FaStar className={classNameFavBtn} onClick={props.addToFavorite} />\n      <div className=\"infos\">\n        <div className=\"main-infos\">\n          <div className=\"rating\">\n            <span style={{ borderColor: colorScore }} className=\"score\">\n              {props.rating * 10}%\n            </span>\n          </div>\n          <h3 className=\"title\" onClick={props.showDetails}>\n            {props.title}\n          </h3>\n          <h4 className=\"release\">{props.date}</h4>\n        </div>\n        <p className=\"overview\">\n          {props.overview.slice(0, 120)}\n          ...\n        </p>\n      </div>\n    </li>\n  );\n};\n","import React, { Component } from 'react';\nimport { Movie } from './MovieList';\n\nexport class Movies extends Component {\n  render() {\n    return (\n      <ul className=\"movie-list\">\n        {this.props.movies.map((movie, i) => (\n          <Movie\n            key={i}\n            cover={movie.poster_path}\n            title={movie.original_title}\n            rating={movie.vote_average}\n            date={movie.release_date}\n            overview={movie.overview}\n            favorite={movie.favorite}\n            showDetails={() => this.props.showDetails(i)}\n            addToFavorite={() => this.props.addToFavorite(movie)}\n          />\n        ))}\n      </ul>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\n\nexport const MovieDetail = props =>{\n    return (\n        <div className={props.movieDetailOn ? \"movie-detail-on\" : \"movie-detail\"}>\n            <div>\n                <h2>{props.title}</h2>\n                <div className=\"video-container\">\n                <button className=\"close-modal\" onClick={props.closeModal}>X</button>\n                    <iframe src={props.trailer} allow=\"autoplay; encrypted-media\"  webkitallowfullscreen='true' mozallowfullscreen='true' allowFullScreen frameBorder=\"0\" modestbranding=\"1\"></iframe>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ListStyled = styled.ul`\n  overflow-y: hidden;\n  width: 100%;\n  list-style: none;\n  height: 21rem;\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  background: transparent;\n\n  ::-webkit-scrollbar {\n    display: none;\n    width: 0;\n    background: transparent;\n  }\n\n  @media(min-width:960px) {\n    margin: 0 auto;\n    width: 60%;\n  }\n`;\n\nconst ElementListStyled = styled.li`\n  position: absolute;\n  width: 10rem;\n  box-shadow: 0.5rem 0.25rem 1rem rgba(0, 0, 0, 0.25);\n  border-radius: 1.5rem;\n  transition: all 0.35s ease-in;\n  cursor: pointer;\n  background: transparent;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ImageStyled = styled.img`\n  max-width: 100%;\n  border-radius: 1.5rem;\n`;\n\nexport const Movie = props => {\n  return (\n    <ListStyled>\n      {props.data.slice(0, 10).map((movie, i) => {\n        return (\n          <ElementListStyled\n            className=\"movie-trending\"\n            key={i}\n            style={{ left: `${i * 120}px` }}\n            onClick={() => props.toggleMovieDetails(movie.id)}\n          >\n            <ImageStyled\n              src={`https://image.tmdb.org/t/p/w600_and_h900_bestv2${movie.poster_path}`}\n              alt={movie.original_title}\n            />\n          </ElementListStyled>\n        );\n      })}\n    </ListStyled>\n  );\n};\n","import React from 'react';\nimport { Movie } from './Movie';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  height: 25rem;\n  padding: 0;\n`;\n\nconst Title = styled.h3`\n  font-size: 1.75rem;\n  padding: 1rem;\n\n  @media (min-width: 960px) {\n    width: 50%;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  font-size: 1.5rem;\n  text-decoration: none;\n  padding: 0 2rem;\n`;\n\nexport default class SlideMovies extends React.Component {\n  render() {\n    const { title, path, toggleMovieDetails, data } = this.props;\n    return this.props.data.length > 0 ? (\n      <Wrapper>\n        <Title>{title}</Title>\n        <StyledLink to={path}>More</StyledLink>\n        <Movie data={data} toggleMovieDetails={toggleMovieDetails} />\n      </Wrapper>\n    ) : (\n      ''\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport SlideMovies from '../SlideMovies/SlideMovies';\n\nclass WeekTrending extends React.Component {\n  render() {\n    return (\n      <SlideMovies\n        title=\"Week Trending\"\n        path=\"/week-trending\"\n        data={this.props.weekTrending}\n        toggleMovieDetails={this.props.toggleMovieDetails}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  weekTrending: state.weekTrending\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(WeekTrending);\n","import React from 'react';\nimport SlideMovies from '../SlideMovies/SlideMovies';\nimport {connect} from 'react-redux';\n\nclass Favorites extends React.Component {\n  render() {\n    return(\n      <SlideMovies\n        title=\"Favorites Movies\"\n        path=\"/favorites\"\n        data={this.props.favorites}\n        toggleMovieDetails={this.props.toggleMovieDetails}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  favorites: state.favorites\n});\n\nexport default connect(mapStateToProps, null)(Favorites);","import React from 'react';\n\nconst CastList = props => {\n  return (\n    <ul className=\"cast-list\">\n      {props.cast &&\n        props.cast.slice(0, props.castLength).map((actor, i) => (\n          <li key={actor.credit_id} style={{ left: `${i * 120}px` }}>\n            <img src={`https://image.tmdb.org/t/p/w600_and_h900_bestv2${actor.profile_path}`} />\n            <p>{actor.name}</p>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default CastList;","import React from 'react';\nimport './MovieDetails.css';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as Actions from '../../actionCreators/actionCreators';\nimport playBtn from '../../play-button.svg';\nimport CastList from './Cast';\n\nclass MovieDetails extends React.Component {\n  state = {\n    length: 8,\n    castToggled: false\n  };\n\n  noScroll = () => {\n    window.scrollTo(0, 0);\n  };\n\n  componentDidUpdate(prevProps) {\n    //remove noScroll event when the movie details component is hided\n    if (prevProps.movie.on) {\n      window.removeEventListener('scroll', this.noScroll);\n    } else {\n      window.addEventListener('scroll', this.noScroll);\n    }\n  }\n\n  calcRuntime = runtime => {\n    let runtimeInt = parseInt(runtime, 10);\n    let hour = parseInt(runtimeInt / 60, 10);\n    let minutes = runtimeInt - hour * 60;\n\n    return `${hour} h ${minutes} min`;\n  };\n\n  render() {\n    let { movie, hideMovieDetails } = this.props;\n    const poster = movie ? movie.poster_path : '';\n    const styleMovieDetails = {\n      backgroundImage: `linear-gradient(rgba(0,0,0,0.2) 20%, rgba(0,0,0,0.94) 45%), url(https://image.tmdb.org/t/p/w600_and_h900_bestv2${poster})`\n    };\n    console.log(movie.cast);\n\n    return !movie.on ? (\n      ''\n    ) : (\n      <div className=\"movie-details\" style={styleMovieDetails}>\n        <button className=\"movie-details--hide\" onClick={hideMovieDetails}>\n          X\n        </button>\n        <button className=\"play-trailer\">\n          <img src={playBtn} alt=\"play trailer\" />\n        </button>\n        <div className=\"details\">\n          <p>\n            <span>{movie.release_date}</span>\n            <span>{movie.genres ? movie.genres[0].name : ''}</span>\n          </p>\n          <h4>{movie.original_title}</h4>\n          <p>{this.calcRuntime(movie.runtime)}</p>\n          <p className=\"movie-details--overview\">{movie.overview}</p>\n          <p>{movie.vote_count} rating</p>\n          <div className=\"cast\">\n            <h4>Stars</h4>\n            <CastList cast={this.props.movie.cast} castLength={this.state.length}/>\n            <button className=\"see-more-cast\">See More</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  movie: state.movieDetails\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      hideMovieDetails: Actions.hideMovieDetails\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MovieDetails);\n","import React from 'react';\nimport './Menu.css';\n\nconst FilterMenu = props => {\n  const menus = ['Popular', 'Top Rated', 'Upcoming', 'My List', 'Categories'];\n\n  return (\n    <div className=\"filter-menu\">\n      <ul>\n        {menus.map((menu, i) => (\n          <li style={{ left: `${i * 120}px` }} key={i}>\n            {menu}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default FilterMenu;\n","import React, { Component } from 'react';\nimport { Movies } from './components/Movies';\nimport { MovieDetail } from './components/MovieDetail';\nimport WeekTrending from './components/Trending/WeekTrending';\nimport Favorites from './components/Favorites/Favorites';\nimport MovieDetails from './components/MovieDetails/MovieDetails';\nimport FilterMenu from './components/FilterMenu/Menu';\nimport './App.css';\n\nimport { connect } from 'react-redux';\n\nimport * as Actions from './actionCreators/actionCreators';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movieDetailOn: false\n    };\n    this.showDetails = this.showDetails.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getWeekTrending();\n  }\n\n  showDetails(index) {\n    this.props.getTrailer(this.props.movies[index].id);\n    this.setState({\n      movieDetailOn: !this.state.movieDetailOn\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      movieDetailOn: !this.state.movieDetailOn\n    });\n  }\n\n  render() {\n    let { movies, trailer, addToFavorite} = this.props;\n    return (\n      <div className=\"App\">\n        {/* <Link to=\"/favorites\">Favorites</Link> */}\n        <FilterMenu/>\n        <WeekTrending toggleMovieDetails={this.props.toggleMovieDetails} />\n        <Favorites toggleMovieDetails={this.props.toggleMovieDetails}/>\n        <Movies movies={movies} showDetails={this.showDetails} addToFavorite={addToFavorite} />\n        <MovieDetail\n          movieDetailOn={this.state.movieDetailOn}\n          trailer={\n            this.state.movieDetailOn\n              ? `https://www.youtube.com/embed/${trailer}?autoplay=1&controls=0&loop=1&showinfo=0`\n              : ''\n          }\n          closeModal={this.closeModal}\n        />\n        <MovieDetails />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  searchTerm: state.searchTerm,\n  movies: state.data,\n  weekTrending: state.weekTrending,\n  trailer: state.trailer,\n  movieDetails: state.movieDetails,\n  autoCompletion: state.autoCompletion,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setSearchTerm(value) {\n    dispatch(Actions.setSearchTerm(value));\n  },\n  fetchMovieSearched(term) {\n    dispatch(Actions.fetchMovieSearched(term));\n  },\n  getTrailer(movieId) {\n    dispatch(Actions.getTrailerMiddleware(movieId));\n  },\n  addToFavorite(movie) {\n    dispatch(Actions.addToFavorite(movie));\n  },\n  getWeekTrending() {\n    dispatch(Actions.fetchWeekTrending());\n  },\n  toggleMovieDetails(movie) {\n    dispatch(Actions.fetchMovieDetails(movie));\n  },\n  hideMovieDetails() {\n    dispatch(Actions.hideMovieDetails());\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import React, { Component } from 'react';\nimport { Movie } from './MovieList';\nimport {connect} from 'react-redux';\n\nclass Favorites extends Component {\n  render() {\n    let favoritesMovies = this.props.movies.filter(movie=>movie.favorite);\n\n    return (\n      <div className=\"favorites-movies\">\n        <ul className=\"favorites-list\">\n          {favoritesMovies.map((movie, i) => (\n            <Movie\n              key={i}\n              cover={movie.poster_path}\n              title={movie.original_title}\n              rating={movie.vote_average}\n              date={movie.release_date}\n              overview={movie.overview}\n              favorite={movie.favorite}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n    movies: state.data\n});\n\nexport default connect(mapStateToProps)(Favorites);\n","import React from 'react';\n\nexport const InputRef = React.forwardRef((props, ref) => {\n  return (\n    <input\n      type={props.type}\n      placeholder={props.placeholder}\n      value={props.value}\n      onChange={props.onChangeHandler}\n      style={props.style}\n      ref={ref}\n    />\n  );\n});\n","import {fromEvent, from} from 'rxjs';\nimport {map, filter, throttleTime, switchMap, distinctUntilChanged} from 'rxjs/operators';\nimport {API} from '../components/Api';\n\nexport const autoCompletion$ = (element, eventType) => {\n  return fromEvent(element, eventType)\n    .pipe(\n      distinctUntilChanged(),\n      throttleTime(1000),\n      filter(key=>key.target.value),\n      map(key=>key.target.value),\n      switchMap(value=>from(API.fetchMovieSearched(value))\n        .pipe(\n          map(res=>res.results),\n        )\n      )\n    );\n};","import React, { Component } from 'react';\nimport {InputRef} from './Input';\nimport { FaSearch } from 'react-icons/fa';\nimport {autoCompletion$} from '../../observables/observables';\nimport {autoCompletion, emptyAutoCompletion, setSearchTerm, fetchMovieSearched} from '../../actionCreators/actionCreators';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nclass Form extends Component {\n  state = {\n    query: '',\n    inputQueryShowed: false\n  };\n\n  inpRef = React.createRef();\n\n  autoCompletionSubscription = (event) => {\n    return autoCompletion$(event, 'input').subscribe(movies=>{\n      //for every typing, clear the previous list of movies\n      this.props.emptyAutoCompletion();\n      this.props.autoCompletion(movies);\n    });\n  }\n\n  onChangeQuery = e => {\n    this.autoCompletionSubscription(e.target);\n    this.props.setSearchTerm(e.target.value);\n    this.setState({ query: e.target.value });\n  };\n\n  toggleInput = () => {\n    this.setState({ inputQueryShowed: !this.state.inputQueryShowed });\n  };\n\n  submitForm = e => {\n    e.preventDefault();\n    if (this.state.inputQueryShowed) {\n      //fetch the movies founded and then unsubscribe from event for avoid memory leak\n      this.props.fetchMovieSearched(this.props.searchTerm);\n      this.autoCompletionSubscription(this.inpRef.current).unsubscribe();\n    } else {\n      this.toggleInput();\n    }\n  };\n\n  render() {\n    return (\n      <form id=\"movie-search\" onSubmit={this.submitForm}>\n        <InputRef\n          type=\"search\"\n          placeholder={'Search movie'}\n          value={this.props.searchTerm}\n          onChangeHandler={this.onChangeQuery}\n          style={{\n            display: this.state.inputQueryShowed ? 'block' : 'none'\n          }}\n          ref={this.inpRef}\n        />\n        <button type=\"submit\">\n          <FaSearch />\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  searchTerm: state.searchTerm,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  autoCompletion: autoCompletion,\n  emptyAutoCompletion: emptyAutoCompletion,\n  setSearchTerm: setSearchTerm,\n  fetchMovieSearched: fetchMovieSearched,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import React from 'react';\nimport './AutoCompletion.css';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { setSearchTerm, emptyAutoCompletion } from '../../actionCreators/actionCreators';\n\nconst AutoCompletion = props => {\n  const { setSearchTerm, autoCompletionMovies, emptyAutoCompletion } = props;\n  return (\n    <ul className=\"auto-completion\">\n      {autoCompletionMovies.slice(0, 5).map(movie => (\n        <li\n          onClick={() => {\n            setSearchTerm(movie.title);\n            emptyAutoCompletion();\n          }}\n          key={movie.id}\n        >\n          {movie.title}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst mapStateToProps = state => ({\n  autoCompletionMovies: state.autoCompletion\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      setSearchTerm: setSearchTerm,\n      emptyAutoCompletion: emptyAutoCompletion\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AutoCompletion);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Form from './Form/Form';\nimport AutoCompletion from './AutoCompletionForm/AutoCompletion';\nimport logo from '../logo.svg';\n\nexport class Header extends Component {\n  render() {\n    return (\n      <header className=\"main-header\">\n        <Link to=\"/\">\n          <img src={logo} alt=\"Logo\" />\n        </Link>\n        <Form />\n        <AutoCompletion />\n      </header>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport * as Actions from './actionCreators/actionCreators';\nimport store from './store';\nimport App from './App';\nimport Favorites from './components/Favorites';\nimport {Header} from './components/Header';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\n\nstore.dispatch(Actions.fetchMovieSearched('avengers'));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename='/moviedb/build'>\n      <div>\n        <Header/>\n        <Switch>\n          <Route exact path=\"/\" component={App} />\n          <Route path='/favorites' component={Favorites}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}